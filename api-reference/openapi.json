{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Call API",
    "description": "A simple API to retrieve calls",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.allriseai.com/api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/call": {
      "get": {
        "security": [
          {
            "locationAuth": []
          }
        ],
        "description": "Returns all calls performed on your account",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 100,
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to return",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of call to return",
            "schema": {
              "type": "string",
              "enum": [
                "inboundPhoneCall",
                "outboundPhoneCall"
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start date to return calls from. In format YYYY-MM-DD",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end date to return calls to. In format YYYY-MM-DD",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "outcome",
            "in": "query",
            "description": "The outcome of the call",
            "schema": {
              "type": "string",
              "enum": [
                "Follow Up",
                "Booked Appointment",
                "Do Not Call",
                "Live Transfer",
                "Not Interested",
                "Not Qualified"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Call response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Call"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/custom-fields": {
      "get": {
        "description": "Returns all custom fields on your account",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Custom Fields response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customFields": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomFields"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "description": "Adds a new lead to the system",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Call": {
        "type": "object",
        "properties": {
          "call_id": {
            "description": "The unique identifier for the call",
            "type": "string"
          },
          "type": {
            "description": "The type of call",
            "type": "string",
            "enum": [
              "inboundPhoneCall",
              "outboundPhoneCall"
            ]
          },
          "customer_phone": {
            "description": "The phone number of the customer",
            "type": "string"
          },
          "end_reason": {
            "description": "The reason the call ended",
            "type": "string"
          },
          "agent": {
            "description": "The unique identifier of the agent who performed the call",
            "type": "string"
          },
          "duration": {
            "description": "The duration of the call in seconds",
            "type": "integer"
          },
          "start_time": {
            "description": "The time the call started",
            "type": "string",
            "format": "date-time"
          },
          "end_time": {
            "description": "The time the call ended",
            "type": "string",
            "format": "date-time"
          },
          "transcription": {
            "description": "The transcription of the call",
            "type": "string"
          },
          "outcome": {
            "description": "The outcome of the call",
            "type": "string",
            "enum": [
              "Follow Up",
              "Booked Appointment",
              "Do Not Call",
              "Live Transfer",
              "Not Interested",
              "Not Qualified"
            ]
          },
          "summary": {
            "description": "A summary of the call",
            "type": "string"
          },
          "recording": {
            "description": "The URL to the recording of the call",
            "type": "string"
          },
          "created_at": {
            "description": "The time the call log was created",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "description": "The total number of calls",
            "type": "integer"
          },
          "limit": {
            "description": "The maximum number of calls to return per page",
            "type": "integer"
          },
          "page": {
            "description": "The current page number",
            "type": "integer"
          },
          "nextPage": {
            "description": "The next page number",
            "type": "integer"
          },
          "totalPages": {
            "description": "The total number of pages",
            "type": "integer"
          }
        }
      },
      "CustomFields": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the custom field",
            "type": "string"
          },
          "name": {
            "description": "The name of the custom field",
            "type": "string"
          },
          "fieldKey": {
            "description": "The key of the custom field",
            "type": "string"
          },
          "placeholder": {
            "description": "The placeholder text for the custom field",
            "type": "string"
          },
          "position": {
            "description": "The position of the custom field",
            "type": "integer"
          },
          "dateType": {
            "description": "The type of the custom field",
            "type": "string",
            "enum": [
              "TEXT",
              "LARGE_TEXT",
              "NUMERICAL",
              "PHONE",
              "MONETORY",
              "CHECKBOX",
              "SINGLE_OPTIONS",
              "MULTIPLE_OPTIONS",
              "FLOAT",
              "TIME",
              "DATE",
              "TEXTBOX_LIST",
              "FILE_UPLOAD",
              "SIGNATURE"
            ]
          },
          "picklistOptions": {
            "description": "The picklist options for the custom field",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Contact": {
        "type": "object",
        "required": [
          "phone"
        ],
        "properties": {
          "phone": {
            "type": "string",
            "description": "The phone number of the contact",
            "example": "+11234567890",
            "pattern": "^\\+?[1-9]\\d{1,14}$"
          },
          "email": {
            "type": "string",
            "description": "The email address of the contact"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the contact"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the contact"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The date of birth of the contact",
            "format": "date",
            "example": "1990-01-31"
          },
          "address1": {
            "type": "string",
            "description": "The first line of the address of the contact"
          },
          "city": {
            "type": "string",
            "description": "The city of the address of the contact"
          },
          "state": {
            "type": "string",
            "description": "The state of the address of the contact"
          },
          "country": {
            "type": "string",
            "description": "The country of the address of the contact"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code of the address of the contact"
          },
          "customField": {
            "type": "object",
            "description": "The custom fields of the contact. You can get the custom field ids from the /custom-fields endpoint",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "__custom_field_id_1__": "value1",
              "__custom_field_id_2__": "value2"
            }
          }

        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "locationAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Bearer authentication header of the form **Bearer <location>** where **<location>** is the location key"
      }
    }
  }
}